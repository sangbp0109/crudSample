/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2021-06-24 02:07:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("jar:file:/C:/Users/sangb/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/sangb/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1623654223750L));
    _jspx_dependants.put("jar:file:/C:/Users/sangb/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-3.1.1.RELEASE.jar", Long.valueOf(1623654224159L));
    _jspx_dependants.put("jar:file:/C:/Users/sangb/eclipse-workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/spring-webmvc-3.1.1.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1329370132000L));
    _jspx_dependants.put("/WEB-INF/views/common/common.jsp", Long.valueOf(1623654224537L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"/resources/js/jquery-1.10.2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar $j = jQuery.noConflict();\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>userJoin</title>\r\n");
      out.write("<link rel=\"styleSheet\" href=\"/resources/style/regMember.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form class=\"join\" method=\"post\">\r\n");
      out.write("\t<table align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<a href=\"/board/boardList.do\">List</a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<table align=\"center\" border=\"1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>id<span class=\"warning\" id=\"idRepuire\">*</span></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userId\" id=\"id\" class=\"id\" autofocus /> \r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"idCheckBtn\" class=\"idCheck\" value=\"중복확인\"  /><br />\r\n");
      out.write("\t\t\t\t<span class=\"warning noDisplay\" id=\"idWarning\">중복확인을 진행해 주세요</span> \r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>pw <span class=\"warning\" id=\"pwRequire\">*</span></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"password\" name=\"userPw\" id=\"pw\" class=\"pw\" /><br>\r\n");
      out.write("\t\t\t\t<span class=\"warning\" id=\"pwWarning\">6~12 자리의 비밀번호를 입력해 주새요.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\t\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>pw check <span class=\"warning\" id=\"pw2Require\">*</span></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"password\" id=\"pw2\" class=\"pw2\" /><br>\r\n");
      out.write("\t\t\t\t<span class=\"warning noDisplay\" id=\"pwSameWarning\">입력하신 비밀번호와 일치하지 않습니다.</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\t\r\n");
      out.write("\t\t\t<td>name <span class=\"warning\" id=\"nameRequire\">*</span></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userName\" id=\"name\" class=\"name\" />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>phone <span class=\"warning\" id=\"phoneRequire\">*</span></td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<select name=\"userPhone1\">\r\n");
      out.write("\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t-\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userPhone2\" id=\"phone2\" class=\"phoneBox\">\r\n");
      out.write("\t\t\t\t-\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userPhone3\" id=\"phone3\" class=\"phoneBox\"><br>\r\n");
      out.write("\t\t\t\t<span class=\"warning noDisplay\" id=\"phoneRegCheck\">전화번호 양식에 맞춰주세요.000-0000-0000</span>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\t\r\n");
      out.write("\t\t\t<td>postNo</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userPostNo\" id=\"postNo\" class=\"postNo\" placeholder=\"xxx-xxx\" /><br>\r\n");
      out.write("\t\t\t\t<span class=\"warning noDisplay\" id=\"postNoRegCheck\">우편번호 양식에 맞춰주세요.000-000</span>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\t\r\n");
      out.write("\t\t\t<td>address</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userAddr\" id=\"address\" class=\"address\" />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\t\r\n");
      out.write("\t\t\t<td>company</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userCompany\" id=\"company\" class=\"company\" />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<table align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t<input id=\"submit\" type=\"button\" value=\"가입하기\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<!-- \r\n");
      out.write("\t\t\t\t<button>작성완료</button>\r\n");
      out.write("\t\t\t\t<input id=\"submit\" type=\"button\" value=\"가입하기\">\r\n");
      out.write("\t -->\t\t\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t<!-- \r\n");
      out.write("\t\t\t\t이름<br/>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"name\" autofocus /><br/><br/>\r\n");
      out.write("\t\t\t\t전화<br/>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"phone\" /><br/><br/>\r\n");
      out.write("\t\t\t\t -->\t\r\n");
      out.write("\t\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t// pw 유효성 체크\r\n");
      out.write("\tlet pw = document.querySelector('#pw');\r\n");
      out.write("\tpw.addEventListener('keyup',pwRegCheck);\r\n");
      out.write("\tfunction pwRegCheck(){\r\n");
      out.write("\t\tlet pwReg = /^[A-Za-z0-9]{6,12}$/;\r\n");
      out.write("\t\tlet pwVal = pw.value;\r\n");
      out.write("\t\tlet pwRequire = document.querySelector('#pwRequire');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(pwReg.test(pwVal)){\r\n");
      out.write("\t\t\tpwWarning.classList.add('noDisplay');\r\n");
      out.write("\t\t\tpwRequire.classList.replace('warning', 'success');\r\n");
      out.write("\t\t\treturn true\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tpwWarning.classList.remove('noDisplay');\r\n");
      out.write("\t\t\tpwRequire.classList.replace('success', 'warning');\r\n");
      out.write("\t\t\treturn false\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 비밀번호 확인 일치 유효성\r\n");
      out.write("\tlet pw2 = document.querySelector('#pw2');\r\n");
      out.write("\tpw2.addEventListener('keyup',pw2SameCheck);\r\n");
      out.write("\tfunction pw2SameCheck(){\r\n");
      out.write("\t\tlet pwValue = pw.value;\r\n");
      out.write("\t\tlet pw2Value = pw2.value;\r\n");
      out.write("\t\tlet pwSameBox = document.querySelector('#pwSameWarning');\r\n");
      out.write("\t\tlet pw2Require = document.querySelector('#pw2Require');\r\n");
      out.write("\r\n");
      out.write("\t\t// 같지않으면\r\n");
      out.write("\t\tif(pwValue !== pw2Value){\r\n");
      out.write("\t\t\tpwSameBox.classList.remove('noDisplay');\r\n");
      out.write("\t\t\tpw2Require.classList.replace('success', 'warning')\r\n");
      out.write("\t\t\treturn false\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tpwSameBox.classList.add('noDisplay');\r\n");
      out.write("\t\t\tpw2Require.classList.replace('warning', 'success')\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn true\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// name null 체크\r\n");
      out.write("\tlet nameVal = document.querySelector('#name');\r\n");
      out.write("\tlet nameRequire = document.querySelector('#nameRequire');\r\n");
      out.write("\tnameVal.addEventListener('keyup', nameCheck);\r\n");
      out.write("\tfunction nameCheck(){\r\n");
      out.write("\t\tif(nameVal.value === '' || nameVal.value === null || nameVal.value === undefined){\r\n");
      out.write("\t\t\tnameRequire.classList.replace('success', 'warning');\r\n");
      out.write("\t\t\treturn false\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tnameRequire.classList.replace('warning', 'success');\r\n");
      out.write("\t\t\treturn true\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// phone 유효성 체크\r\n");
      out.write("\tlet phone2 = document.querySelector('#phone2');\r\n");
      out.write("\tlet phone3 = document.querySelector('#phone3');\r\n");
      out.write("\tlet phoneRegBox = document.querySelector('#phoneRegCheck');\r\n");
      out.write("\tlet phoneRequired = document.querySelector('#phoneRequire');\r\n");
      out.write("\tphone2.addEventListener('keyup', phoneCheck);\r\n");
      out.write("\tphone3.addEventListener('keyup', phoneCheck);\r\n");
      out.write("\r\n");
      out.write("\tfunction phoneCheck(){\r\n");
      out.write("\t\tlet phoneReg = /^[0-9]{4}$/;\r\n");
      out.write("\t\tif(phoneReg.test(phone2.value) && phoneReg.test(phone3.value)){\r\n");
      out.write("\t\t\tphoneRegBox.classList.add('noDisplay');\r\n");
      out.write("\t\t\tphoneRequired.classList.replace('warning', 'success')\r\n");
      out.write("\t\t\treturn true\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tphoneRegBox.classList.remove('noDisplay');\r\n");
      out.write("\t\t\tphoneRequired.classList.replace('success', 'warning')\r\n");
      out.write("\r\n");
      out.write("\t\t\treturn false\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 우편번호 유효성 체크\r\n");
      out.write("\tlet postNo = document.querySelector('#postNo');\r\n");
      out.write("\tpostNo.addEventListener('keyup',postRegCheck);\r\n");
      out.write("\tfunction postRegCheck(){\r\n");
      out.write("\t\tlet postReg = /^\\d{3}-\\d{3}/;\r\n");
      out.write("\t\tlet postVal = postNo.value;\r\n");
      out.write("\t\tlet postCheckBox = document.querySelector('#postNoRegCheck');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(postReg.test(postVal)){\r\n");
      out.write("\t\t\tpostCheckBox.classList.add('noDisplay');\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tpostCheckBox.classList.remove('noDisplay');\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// id 중복체크\r\n");
      out.write("\tlet idCheckPass = false;\r\n");
      out.write("\tlet idCheckBtn = document.querySelector('#idCheckBtn');\r\n");
      out.write("\tlet id = document.querySelector('#id');\r\n");
      out.write("\tlet idRepuired = document.querySelector('#idRepuire');\r\n");
      out.write("\tidCheckBtn.addEventListener('click',idCheckBtnEvent);\r\n");
      out.write("\tfunction idCheckBtnEvent(){\r\n");
      out.write("\t\tlet idVal = id.value;\r\n");
      out.write("\t\t$j.ajax({\r\n");
      out.write("\t\t\turl: '/idCheck.do',\r\n");
      out.write("\t\t\tdata: \"id=\" + idVal,\r\n");
      out.write("\t\t\ttype: 'post',\r\n");
      out.write("\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\tsuccess: function(responseObj){\r\n");
      out.write("\t\t\t\t// true 면 해당 id 가 존재하므로 중복체크 실패\r\n");
      out.write("\t\t\t\tif(responseObj.isExist){\r\n");
      out.write("\t\t\t\t\talert('해당 id가 존재합니다. 다른 아이디를 사용해 주세요.')\r\n");
      out.write("\t\t\t\t\tidRepuired.classList.replace('success','warning');\r\n");
      out.write("\t\t\t\t\tidCheckPass = false;\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert('사용가능한 ID 입니다.');\r\n");
      out.write("\t\t\t\t\tidRepuired.classList.replace('warning','success');\r\n");
      out.write("\t\t\t\t\tidCheckPass = true;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("\tid.addEventListener('keyup', idKeyUpCheck);\r\n");
      out.write("\tfunction idKeyUpCheck(){\r\n");
      out.write("\t\tidRepuired.classList.replace('success','warning');\r\n");
      out.write("\t\tidCheckPass = false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t// 가입\r\n");
      out.write("\tlet submitBtn = document.querySelector('#submit');\r\n");
      out.write("\tsubmitBtn.addEventListener('click', joinUser);\r\n");
      out.write("\tfunction joinUser(){\r\n");
      out.write("\t\tif(!idCheckPass){\r\n");
      out.write("\t\t\talert('id 중복체크를 진행해 주새요');\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!pwRegCheck()){\r\n");
      out.write("\t\t\talert('비밀번호 양식을 맞춰주세요.');\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!pw2SameCheck()){\r\n");
      out.write("\t\t\talert('비밀번호가 일치하지 않습니다.')\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!nameCheck()){\r\n");
      out.write("\t\t\talert('이름을 입력해 주새요.')\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!phoneCheck()){\r\n");
      out.write("\t\t\talert('핸드폰 번호 양식을 맞춰주세요.');\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(!postRegCheck()){\r\n");
      out.write("\t\t\talert('우편번호 양식을 맞춰주세요.');\r\n");
      out.write("\t\t\treturn\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tlet param = $j('.join').serialize();\r\n");
      out.write("\t\t$j.ajax({\r\n");
      out.write("\t\t\turl: '/user/userJoinAction.do',\r\n");
      out.write("\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\ttype: \"POST\",\r\n");
      out.write("\t\t    data : param,\r\n");
      out.write("\t\t    success: function(data, textStatus, jqXHR)\r\n");
      out.write("\t\t    {\r\n");
      out.write("\t\t\t\talert(\"가입 완료\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\talert(\"메세지:\"+data.success);\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlocation.href = \"/board/boardList.do?pageNo=1\";\r\n");
      out.write("\t\t    },\r\n");
      out.write("\t\t    error: function (jqXHR, textStatus, errorThrown)\r\n");
      out.write("\t\t    {\r\n");
      out.write("\t\t    \talert(\"가입 실패\");\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/user/userJoin.jsp(52,5) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("item");
      // /WEB-INF/views/user/userJoin.jsp(52,5) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/user/userJoin.jsp(52,5) '${phoneList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${phoneList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/user/userJoin.jsp(52,5) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.codeName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${item.codeName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
